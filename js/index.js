// Generated by CoffeeScript 1.10.0
(function() {
  var app;

  $(function() {
    app.setBind();
    return app.initialize();
  });

  app = {
    all_hand: ['image/gu.png', 'image/ch.png', 'image/pa.png'],
    time: 3,
    timer: null,
    heart_image: {
      'red': 'image/heart_red.png',
      'black': 'image/heart_black.png'
    },
    lifepoint: {
      'my': 3,
      'rival': 3
    },
    initialize: function() {
      console.log('init');
      return console.log(this.heart_image.red);
    },
    setBind: function() {
      $('.gu').click((function(_this) {
        return function() {
          _this.janken(0);
          return _this.clearTimeAnimation();
        };
      })(this));
      $('.ch').click((function(_this) {
        return function() {
          _this.janken(1);
          return _this.clearTimeAnimation();
        };
      })(this));
      $('.pa').click((function(_this) {
        return function() {
          _this.janken(2);
          return _this.clearTimeAnimation();
        };
      })(this));
      $('.start').click((function(_this) {
        return function() {
          return _this.start();
        };
      })(this));
      return $('.reset').click((function(_this) {
        return function() {
          return _this.reset();
        };
      })(this));
    },
    clearTimeAnimation: function() {
      this.clearTimer(true);
      this.cannotClickHand(true);
      return this.controlClickStart();
    },
    controlClickStart: function() {
      var ref, ref1;
      if ((1 <= (ref = this.lifepoint.my) && ref <= 3) && (1 <= (ref1 = this.lifepoint.rival) && ref1 <= 3)) {
        return this.cannotClickStart(false);
      } else if (this.lifepoint.my || this.lifepoint.rival === 0) {
        return this.cannotClickStart(true);
      }
    },
    start: function() {
      this.cannotClickStart(true);
      this.clearBothHand();
      $('#time').css('display', 'block');
      $('.nokoritime').css('display', 'block');
      $('.answer03').css('display', 'none');
      $('.answer').css('display', 'none');
      return $('.answer01').fadeIn(500, function() {
        return $('.answer01').fadeOut(500, function() {
          return $('.answer02').fadeIn(1000, function() {
            $('.time').text(app.time);
            $('.nokoritime').css('display', 'none');
            $('.time').css('display', 'block');
            app.cannotClickHand(false);
            return app.startTimer();
          });
        });
      });
    },
    reset: function() {
      $('.answer02').css('display', 'none');
      $('.answer03').css('display', 'none');
      $('.answer').css('display', 'table-cell');
      this.clearBothHand();
      this.cannotClickHand(true);
      this.cannotClickStart(false);
      this.clearTimer(false);
      this.changeHeartRedImage();
      this.lifepoint.my = 3;
      return this.lifepoint.rival = 3;
    },
    clearBothHand: function() {
      $('#my_hand img').attr('src', 'image/gu.png');
      return $('#rival_hand img').attr('src', 'image/gu.png');
    },
    janken: function(hand) {
      var rival;
      rival = this.getRivalHand();
      this.changeMyHandImage(hand);
      this.changeRivalHandImage(rival);
      return this.judgeJanken(hand, rival);
    },
    getRivalHand: function() {
      var rival;
      return rival = _.random(0, 2);
    },
    changeMyHandImage: function(hand) {
      return $('#my_hand img').attr('src', this.all_hand[hand]);
    },
    changeRivalHandImage: function(rival) {
      return $('#rival_hand img').attr('src', this.all_hand[rival]);
    },
    judgeJanken: function(hand, rival) {
      if (hand === rival) {
        $('.answer03').text('あいこ もう一回');
        return this.poonToResult();
      } else if ((hand + 1 === rival) || (hand === 2 && rival === 0)) {
        $('.answer03').text('勝ち');
        this.poonToResult();
        return this.decrementLifepoint('rival');
      } else {
        $('.answer03').text('負け');
        this.poonToResult();
        return this.decrementLifepoint('my');
      }
    },
    poonToResult: function() {
      $('.answer02').css('display', 'none');
      return $('.answer03').css('display', 'table-cell');
    },
    decrementLifepoint: function(my_or_rival) {
      this.lifepoint[my_or_rival]--;
      if (this.lifepoint[my_or_rival] === 2) {
        return $("." + my_or_rival + "_lifepoint03 img").attr('src', this.heart_image.black);
      } else if (this.lifepoint[my_or_rival] === 1) {
        return $("." + my_or_rival + "_lifepoint02 img").attr('src', this.heart_image.black);
      } else if (this.lifepoint.rival === 0) {
        return this.winJanken();
      } else if (this.lifepoint.my === 0) {
        return this.loseJanken();
      }
    },
    loseJanken: function() {
      $('.my_lifepoint01 img').attr('src', this.heart_image.black);
      this.setModal('lose');
      this.closeModal('lose');
      return this.cannotClickStart(true);
    },
    winJanken: function() {
      $('.rival_lifepoint01 img').attr('src', this.heart_image.black);
      this.setModal('win');
      this.closeModal('win');
      return this.cannotClickStart(true);
    },
    changeHeartRedImage: function() {
      $('.rival_lifepoint03 img').attr('src', this.heart_image.red);
      $('.rival_lifepoint02 img').attr('src', this.heart_image.red);
      $('.rival_lifepoint01 img').attr('src', this.heart_image.red);
      $('.my_lifepoint01 img').attr('src', this.heart_image.red);
      $('.my_lifepoint02 img').attr('src', this.heart_image.red);
      return $('.my_lifepoint03 img').attr('src', this.heart_image.red);
    },
    cannotClickHand: function(is_cannot_click) {
      $('.gu').attr('disabled', is_cannot_click);
      $('.ch').attr('disabled', is_cannot_click);
      return $('.pa').attr('disabled', is_cannot_click);
    },
    cannotClickStart: function(is_cannot_click) {
      return $('.start').attr('disabled', is_cannot_click);
    },
    startTimer: function() {
      return this.timer = setInterval((function(_this) {
        return function() {
          _this.time--;
          _this.changeTimeBackgroundColor();
          $('.time').text(_this.time);
          if (_this.time === 0) {
            alert('時間切れ HP-1');
            _this.clearTimer(false);
            _this.cannotClickStart(false);
            _this.cannotClickHand(true);
            $('.answer02').css('display', 'none');
            $('.answer').css('display', 'table-cell');
            return _this.decrementLifepoint('my');
          }
        };
      })(this), 1000);
    },
    changeTimeBackgroundColor: function() {
      if (this.time === 3) {
        return $('#time').css('background-color', '#FFFFCC');
      } else if (this.time === 2) {
        return $('#time').css('background-color', '#FF9966');
      } else if (this.time === 1) {
        return $('#time').css('background-color', '#FF3300');
      }
    },
    clearTimer: function(is_time_none) {
      clearInterval(this.timer);
      this.time = 3;
      this.changeTimeBackgroundColor();
      $('.time').css('display', 'none');
      if (is_time_none) {
        return $('#time').css('display', 'none');
      } else {
        $('#time').css('display', 'block');
        return $('.nokoritime').css('display', 'block');
      }
    },
    resetTimeBackgroundColor: function() {
      return $('#time').css('background-color', '#FFFFCC');
    },
    setModal: function(win_or_lose) {
      $("#modal-" + win_or_lose).fadeIn(1000);
      return $('#modal-overlay').fadeIn(1000);
    },
    closeModal: function(win_or_lose) {
      $('#modal-overlay').click(function() {
        $("#modal-" + win_or_lose).fadeOut(1000);
        return $('#modal-overlay').fadeOut(1000);
      });
      return $("#modal-" + win_or_lose + "-close").click(function() {
        $("#modal-" + win_or_lose).fadeOut(1000);
        return $('#modal-overlay').fadeOut(1000);
      });
    }
  };

}).call(this);
